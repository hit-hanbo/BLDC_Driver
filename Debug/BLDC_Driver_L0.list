
BLDC_Driver_L0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005a4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000664  0800066c  0001066c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000664  08000664  00010664  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000668  08000668  00010668  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  0001066c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  0800066c  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000080  2000001c  0800066c  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000028  00000000  00000000  0001066c  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000171a  00000000  00000000  00010694  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000625  00000000  00000000  00011dae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000170  00000000  00000000  000123d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00012548  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00000bb7  00000000  00000000  00012650  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000510  00000000  00000000  00013207  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  00013717  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00000328  00000000  00000000  00013794  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800064c 	.word	0x0800064c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	0800064c 	.word	0x0800064c

08000108 <LED_Init>:



// LD3 Init
void LED_Init(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	RCC->IOPENR   |= RCC_IOPENR_GPIOBEN;// ENABLE GPIOB Clock
 800010c:	4b13      	ldr	r3, [pc, #76]	; (800015c <LED_Init+0x54>)
 800010e:	4a13      	ldr	r2, [pc, #76]	; (800015c <LED_Init+0x54>)
 8000110:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8000112:	2102      	movs	r1, #2
 8000114:	430a      	orrs	r2, r1
 8000116:	62da      	str	r2, [r3, #44]	; 0x2c
	GPIOB->MODER  |= (1 << 6);
 8000118:	4b11      	ldr	r3, [pc, #68]	; (8000160 <LED_Init+0x58>)
 800011a:	4a11      	ldr	r2, [pc, #68]	; (8000160 <LED_Init+0x58>)
 800011c:	6812      	ldr	r2, [r2, #0]
 800011e:	2140      	movs	r1, #64	; 0x40
 8000120:	430a      	orrs	r2, r1
 8000122:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  &= ~(1 << 7);         // LD3 Output
 8000124:	4b0e      	ldr	r3, [pc, #56]	; (8000160 <LED_Init+0x58>)
 8000126:	4a0e      	ldr	r2, [pc, #56]	; (8000160 <LED_Init+0x58>)
 8000128:	6812      	ldr	r2, [r2, #0]
 800012a:	2180      	movs	r1, #128	; 0x80
 800012c:	438a      	bics	r2, r1
 800012e:	601a      	str	r2, [r3, #0]
	GPIOB->OTYPER &= ~(1 << 3);         // LD3 PP
 8000130:	4b0b      	ldr	r3, [pc, #44]	; (8000160 <LED_Init+0x58>)
 8000132:	4a0b      	ldr	r2, [pc, #44]	; (8000160 <LED_Init+0x58>)
 8000134:	6852      	ldr	r2, [r2, #4]
 8000136:	2108      	movs	r1, #8
 8000138:	438a      	bics	r2, r1
 800013a:	605a      	str	r2, [r3, #4]
	GPIOB->PUPDR  |= (1 << 6);
 800013c:	4b08      	ldr	r3, [pc, #32]	; (8000160 <LED_Init+0x58>)
 800013e:	4a08      	ldr	r2, [pc, #32]	; (8000160 <LED_Init+0x58>)
 8000140:	68d2      	ldr	r2, [r2, #12]
 8000142:	2140      	movs	r1, #64	; 0x40
 8000144:	430a      	orrs	r2, r1
 8000146:	60da      	str	r2, [r3, #12]
	GPIOB->PUPDR  &= ~(1 << 7);         // Pull-up
 8000148:	4b05      	ldr	r3, [pc, #20]	; (8000160 <LED_Init+0x58>)
 800014a:	4a05      	ldr	r2, [pc, #20]	; (8000160 <LED_Init+0x58>)
 800014c:	68d2      	ldr	r2, [r2, #12]
 800014e:	2180      	movs	r1, #128	; 0x80
 8000150:	438a      	bics	r2, r1
 8000152:	60da      	str	r2, [r3, #12]
}
 8000154:	46c0      	nop			; (mov r8, r8)
 8000156:	46bd      	mov	sp, r7
 8000158:	bd80      	pop	{r7, pc}
 800015a:	46c0      	nop			; (mov r8, r8)
 800015c:	40021000 	.word	0x40021000
 8000160:	50000400 	.word	0x50000400

08000164 <COMP1_IT_Init>:

#include "COMP.h"
#include "stm32l011xx.h"

void COMP1_IT_Init(void)
{
 8000164:	b580      	push	{r7, lr}
 8000166:	af00      	add	r7, sp, #0
	NVIC->ISER[0] |= (1 << 12);          // ENABLE EXTI_COMP
 8000168:	4b07      	ldr	r3, [pc, #28]	; (8000188 <COMP1_IT_Init+0x24>)
 800016a:	4a07      	ldr	r2, [pc, #28]	; (8000188 <COMP1_IT_Init+0x24>)
 800016c:	6812      	ldr	r2, [r2, #0]
 800016e:	2180      	movs	r1, #128	; 0x80
 8000170:	0149      	lsls	r1, r1, #5
 8000172:	430a      	orrs	r2, r1
 8000174:	601a      	str	r2, [r3, #0]
	NVIC->IP[12]  = 0x40;                // 1
 8000176:	4a04      	ldr	r2, [pc, #16]	; (8000188 <COMP1_IT_Init+0x24>)
 8000178:	23cc      	movs	r3, #204	; 0xcc
 800017a:	009b      	lsls	r3, r3, #2
 800017c:	2140      	movs	r1, #64	; 0x40
 800017e:	50d1      	str	r1, [r2, r3]
}
 8000180:	46c0      	nop			; (mov r8, r8)
 8000182:	46bd      	mov	sp, r7
 8000184:	bd80      	pop	{r7, pc}
 8000186:	46c0      	nop			; (mov r8, r8)
 8000188:	e000e100 	.word	0xe000e100

0800018c <COMP1_Init>:

void COMP1_Init(void)
{
 800018c:	b580      	push	{r7, lr}
 800018e:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000190:	4b13      	ldr	r3, [pc, #76]	; (80001e0 <COMP1_Init+0x54>)
 8000192:	4a13      	ldr	r2, [pc, #76]	; (80001e0 <COMP1_Init+0x54>)
 8000194:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8000196:	2101      	movs	r1, #1
 8000198:	430a      	orrs	r2, r1
 800019a:	635a      	str	r2, [r3, #52]	; 0x34
	COMP1_IT_Init();
 800019c:	f7ff ffe2 	bl	8000164 <COMP1_IT_Init>
	COMP1->CSR |= COMP_CSR_COMP1EN;      // ENABLE COMP1
 80001a0:	4b10      	ldr	r3, [pc, #64]	; (80001e4 <COMP1_Init+0x58>)
 80001a2:	4a10      	ldr	r2, [pc, #64]	; (80001e4 <COMP1_Init+0x58>)
 80001a4:	6812      	ldr	r2, [r2, #0]
 80001a6:	2101      	movs	r1, #1
 80001a8:	430a      	orrs	r2, r1
 80001aa:	601a      	str	r2, [r3, #0]
	// GPIOA Init - Analog Mode
	RCC->IOPENR   |= RCC_IOPENR_GPIOAEN;
 80001ac:	4b0c      	ldr	r3, [pc, #48]	; (80001e0 <COMP1_Init+0x54>)
 80001ae:	4a0c      	ldr	r2, [pc, #48]	; (80001e0 <COMP1_Init+0x54>)
 80001b0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80001b2:	2101      	movs	r1, #1
 80001b4:	430a      	orrs	r2, r1
 80001b6:	62da      	str	r2, [r3, #44]	; 0x2c
	GPIOA->MODER  |= 0x00000f0f;         // PA0, PA1, PA4, PA5, Input Mode
 80001b8:	23a0      	movs	r3, #160	; 0xa0
 80001ba:	05db      	lsls	r3, r3, #23
 80001bc:	22a0      	movs	r2, #160	; 0xa0
 80001be:	05d2      	lsls	r2, r2, #23
 80001c0:	6812      	ldr	r2, [r2, #0]
 80001c2:	4909      	ldr	r1, [pc, #36]	; (80001e8 <COMP1_Init+0x5c>)
 80001c4:	430a      	orrs	r2, r1
 80001c6:	601a      	str	r2, [r3, #0]
	GPIOA->PUPDR  &= 0xfffff0f0;         // PA0, PA1, PA4, PA5, Floating
 80001c8:	23a0      	movs	r3, #160	; 0xa0
 80001ca:	05db      	lsls	r3, r3, #23
 80001cc:	22a0      	movs	r2, #160	; 0xa0
 80001ce:	05d2      	lsls	r2, r2, #23
 80001d0:	68d2      	ldr	r2, [r2, #12]
 80001d2:	4906      	ldr	r1, [pc, #24]	; (80001ec <COMP1_Init+0x60>)
 80001d4:	400a      	ands	r2, r1
 80001d6:	60da      	str	r2, [r3, #12]
}
 80001d8:	46c0      	nop			; (mov r8, r8)
 80001da:	46bd      	mov	sp, r7
 80001dc:	bd80      	pop	{r7, pc}
 80001de:	46c0      	nop			; (mov r8, r8)
 80001e0:	40021000 	.word	0x40021000
 80001e4:	40010018 	.word	0x40010018
 80001e8:	00000f0f 	.word	0x00000f0f
 80001ec:	fffff0f0 	.word	0xfffff0f0

080001f0 <ADC1_COMP_IRQHandler>:
		default: SHUTDOWN; break;
	}
}

void ADC1_COMP_IRQHandler(void)
{
 80001f0:	b580      	push	{r7, lr}
 80001f2:	af00      	add	r7, sp, #0
	/* Change ENABLE Phase */
	/* Rewrite Status Flag */
}
 80001f4:	46c0      	nop			; (mov r8, r8)
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bd80      	pop	{r7, pc}
	...

080001fc <TIM2_Init>:
 *             C-Phase < -Channel 3- > PA2
 *   @param    Prescale
 *   @retvalue None
 */
void TIM2_Init(uint16_t PSC, uint16_t ARR)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b082      	sub	sp, #8
 8000200:	af00      	add	r7, sp, #0
 8000202:	0002      	movs	r2, r0
 8000204:	1dbb      	adds	r3, r7, #6
 8000206:	801a      	strh	r2, [r3, #0]
 8000208:	1d3b      	adds	r3, r7, #4
 800020a:	1c0a      	adds	r2, r1, #0
 800020c:	801a      	strh	r2, [r3, #0]
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;     // ENABLE TIM2 Clock
 800020e:	4b87      	ldr	r3, [pc, #540]	; (800042c <TIM2_Init+0x230>)
 8000210:	4a86      	ldr	r2, [pc, #536]	; (800042c <TIM2_Init+0x230>)
 8000212:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8000214:	2101      	movs	r1, #1
 8000216:	430a      	orrs	r2, r1
 8000218:	639a      	str	r2, [r3, #56]	; 0x38
	/* Time Base Init*/
	TIM2->PSC = PSC;                        // Set PreScale Value
 800021a:	2380      	movs	r3, #128	; 0x80
 800021c:	05db      	lsls	r3, r3, #23
 800021e:	1dba      	adds	r2, r7, #6
 8000220:	8812      	ldrh	r2, [r2, #0]
 8000222:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = ARR;                        // Set Auto Reload Value
 8000224:	2380      	movs	r3, #128	; 0x80
 8000226:	05db      	lsls	r3, r3, #23
 8000228:	1d3a      	adds	r2, r7, #4
 800022a:	8812      	ldrh	r2, [r2, #0]
 800022c:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM2->CR1 &= ~(0x03 << 8);              // No Division
 800022e:	2380      	movs	r3, #128	; 0x80
 8000230:	05db      	lsls	r3, r3, #23
 8000232:	2280      	movs	r2, #128	; 0x80
 8000234:	05d2      	lsls	r2, r2, #23
 8000236:	6812      	ldr	r2, [r2, #0]
 8000238:	497d      	ldr	r1, [pc, #500]	; (8000430 <TIM2_Init+0x234>)
 800023a:	400a      	ands	r2, r1
 800023c:	601a      	str	r2, [r3, #0]
	TIM2->CR1 |= TIM_CR1_ARPE;              // ENABLE APRE
 800023e:	2380      	movs	r3, #128	; 0x80
 8000240:	05db      	lsls	r3, r3, #23
 8000242:	2280      	movs	r2, #128	; 0x80
 8000244:	05d2      	lsls	r2, r2, #23
 8000246:	6812      	ldr	r2, [r2, #0]
 8000248:	2180      	movs	r1, #128	; 0x80
 800024a:	430a      	orrs	r2, r1
 800024c:	601a      	str	r2, [r3, #0]
	TIM2->CR1 &= ~(TIM_CR1_DIR);            // Counter Up
 800024e:	2380      	movs	r3, #128	; 0x80
 8000250:	05db      	lsls	r3, r3, #23
 8000252:	2280      	movs	r2, #128	; 0x80
 8000254:	05d2      	lsls	r2, r2, #23
 8000256:	6812      	ldr	r2, [r2, #0]
 8000258:	2110      	movs	r1, #16
 800025a:	438a      	bics	r2, r1
 800025c:	601a      	str	r2, [r3, #0]
	TIM2->CR1 &= ~(0x03 << 5);              // Edge Align Mode
 800025e:	2380      	movs	r3, #128	; 0x80
 8000260:	05db      	lsls	r3, r3, #23
 8000262:	2280      	movs	r2, #128	; 0x80
 8000264:	05d2      	lsls	r2, r2, #23
 8000266:	6812      	ldr	r2, [r2, #0]
 8000268:	2160      	movs	r1, #96	; 0x60
 800026a:	438a      	bics	r2, r1
 800026c:	601a      	str	r2, [r3, #0]
	TIM2->CR1 &= ~(1 << 3);                 // Pulses Mode
 800026e:	2380      	movs	r3, #128	; 0x80
 8000270:	05db      	lsls	r3, r3, #23
 8000272:	2280      	movs	r2, #128	; 0x80
 8000274:	05d2      	lsls	r2, r2, #23
 8000276:	6812      	ldr	r2, [r2, #0]
 8000278:	2108      	movs	r1, #8
 800027a:	438a      	bics	r2, r1
 800027c:	601a      	str	r2, [r3, #0]
	/* Output Compare Channel 1~3 Init */
	// Channel 1
	TIM2->CCMR1 &= ~(0x07);                 // CC1 Output Normal
 800027e:	2380      	movs	r3, #128	; 0x80
 8000280:	05db      	lsls	r3, r3, #23
 8000282:	2280      	movs	r2, #128	; 0x80
 8000284:	05d2      	lsls	r2, r2, #23
 8000286:	6992      	ldr	r2, [r2, #24]
 8000288:	2107      	movs	r1, #7
 800028a:	438a      	bics	r2, r1
 800028c:	619a      	str	r2, [r3, #24]
	TIM2->CCMR1 |= TIM_CCMR1_OC1PE;         // Update Value ON Event
 800028e:	2380      	movs	r3, #128	; 0x80
 8000290:	05db      	lsls	r3, r3, #23
 8000292:	2280      	movs	r2, #128	; 0x80
 8000294:	05d2      	lsls	r2, r2, #23
 8000296:	6992      	ldr	r2, [r2, #24]
 8000298:	2108      	movs	r1, #8
 800029a:	430a      	orrs	r2, r1
 800029c:	619a      	str	r2, [r3, #24]
	TIM2->CCMR1 |= 0x60;                    // PWM Mode 1
 800029e:	2380      	movs	r3, #128	; 0x80
 80002a0:	05db      	lsls	r3, r3, #23
 80002a2:	2280      	movs	r2, #128	; 0x80
 80002a4:	05d2      	lsls	r2, r2, #23
 80002a6:	6992      	ldr	r2, [r2, #24]
 80002a8:	2160      	movs	r1, #96	; 0x60
 80002aa:	430a      	orrs	r2, r1
 80002ac:	619a      	str	r2, [r3, #24]
	TIM2->CCER  &= ~TIM_CCER_CC1P;           // Active High
 80002ae:	2380      	movs	r3, #128	; 0x80
 80002b0:	05db      	lsls	r3, r3, #23
 80002b2:	2280      	movs	r2, #128	; 0x80
 80002b4:	05d2      	lsls	r2, r2, #23
 80002b6:	6a12      	ldr	r2, [r2, #32]
 80002b8:	2102      	movs	r1, #2
 80002ba:	438a      	bics	r2, r1
 80002bc:	621a      	str	r2, [r3, #32]
	// Channel 2
	TIM2->CCMR1 &= ~(0x07 << 8);            // CC2 Output Normal
 80002be:	2380      	movs	r3, #128	; 0x80
 80002c0:	05db      	lsls	r3, r3, #23
 80002c2:	2280      	movs	r2, #128	; 0x80
 80002c4:	05d2      	lsls	r2, r2, #23
 80002c6:	6992      	ldr	r2, [r2, #24]
 80002c8:	495a      	ldr	r1, [pc, #360]	; (8000434 <TIM2_Init+0x238>)
 80002ca:	400a      	ands	r2, r1
 80002cc:	619a      	str	r2, [r3, #24]
	TIM2->CCMR1 |= TIM_CCMR1_OC2PE;         // Update when UEV
 80002ce:	2380      	movs	r3, #128	; 0x80
 80002d0:	05db      	lsls	r3, r3, #23
 80002d2:	2280      	movs	r2, #128	; 0x80
 80002d4:	05d2      	lsls	r2, r2, #23
 80002d6:	6992      	ldr	r2, [r2, #24]
 80002d8:	2180      	movs	r1, #128	; 0x80
 80002da:	0109      	lsls	r1, r1, #4
 80002dc:	430a      	orrs	r2, r1
 80002de:	619a      	str	r2, [r3, #24]
	TIM2->CCMR1 |= 0x6000;                  // PWM Mode 1
 80002e0:	2380      	movs	r3, #128	; 0x80
 80002e2:	05db      	lsls	r3, r3, #23
 80002e4:	2280      	movs	r2, #128	; 0x80
 80002e6:	05d2      	lsls	r2, r2, #23
 80002e8:	6992      	ldr	r2, [r2, #24]
 80002ea:	21c0      	movs	r1, #192	; 0xc0
 80002ec:	01c9      	lsls	r1, r1, #7
 80002ee:	430a      	orrs	r2, r1
 80002f0:	619a      	str	r2, [r3, #24]
	TIM2->CCER  &= ~TIM_CCER_CC2P;           // Active High
 80002f2:	2380      	movs	r3, #128	; 0x80
 80002f4:	05db      	lsls	r3, r3, #23
 80002f6:	2280      	movs	r2, #128	; 0x80
 80002f8:	05d2      	lsls	r2, r2, #23
 80002fa:	6a12      	ldr	r2, [r2, #32]
 80002fc:	2120      	movs	r1, #32
 80002fe:	438a      	bics	r2, r1
 8000300:	621a      	str	r2, [r3, #32]
	// Channel 3
	TIM2->CCMR2 &= ~(0x07);                 // CC3 Output Normal
 8000302:	2380      	movs	r3, #128	; 0x80
 8000304:	05db      	lsls	r3, r3, #23
 8000306:	2280      	movs	r2, #128	; 0x80
 8000308:	05d2      	lsls	r2, r2, #23
 800030a:	69d2      	ldr	r2, [r2, #28]
 800030c:	2107      	movs	r1, #7
 800030e:	438a      	bics	r2, r1
 8000310:	61da      	str	r2, [r3, #28]
	TIM2->CCMR2 |= TIM_CCMR2_OC3PE;         // Update when UEV
 8000312:	2380      	movs	r3, #128	; 0x80
 8000314:	05db      	lsls	r3, r3, #23
 8000316:	2280      	movs	r2, #128	; 0x80
 8000318:	05d2      	lsls	r2, r2, #23
 800031a:	69d2      	ldr	r2, [r2, #28]
 800031c:	2108      	movs	r1, #8
 800031e:	430a      	orrs	r2, r1
 8000320:	61da      	str	r2, [r3, #28]
	TIM2->CCMR2 |= 0x60;                    // PWM Mode 1
 8000322:	2380      	movs	r3, #128	; 0x80
 8000324:	05db      	lsls	r3, r3, #23
 8000326:	2280      	movs	r2, #128	; 0x80
 8000328:	05d2      	lsls	r2, r2, #23
 800032a:	69d2      	ldr	r2, [r2, #28]
 800032c:	2160      	movs	r1, #96	; 0x60
 800032e:	430a      	orrs	r2, r1
 8000330:	61da      	str	r2, [r3, #28]
	TIM2->CCER  &= ~TIM_CCER_CC3P;         // Active High
 8000332:	2380      	movs	r3, #128	; 0x80
 8000334:	05db      	lsls	r3, r3, #23
 8000336:	2280      	movs	r2, #128	; 0x80
 8000338:	05d2      	lsls	r2, r2, #23
 800033a:	6a12      	ldr	r2, [r2, #32]
 800033c:	493e      	ldr	r1, [pc, #248]	; (8000438 <TIM2_Init+0x23c>)
 800033e:	400a      	ands	r2, r1
 8000340:	621a      	str	r2, [r3, #32]
	/* GPIO Init */
	RCC->IOPENR |= RCC_IOPENR_GPIOAEN;      // ENABLE GPIOA Clock
 8000342:	4b3a      	ldr	r3, [pc, #232]	; (800042c <TIM2_Init+0x230>)
 8000344:	4a39      	ldr	r2, [pc, #228]	; (800042c <TIM2_Init+0x230>)
 8000346:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8000348:	2101      	movs	r1, #1
 800034a:	430a      	orrs	r2, r1
 800034c:	62da      	str	r2, [r3, #44]	; 0x2c
	GPIOA->MODER |= (1 << 17) | (1 << 5);   // PA2 PA8 AF
 800034e:	23a0      	movs	r3, #160	; 0xa0
 8000350:	05db      	lsls	r3, r3, #23
 8000352:	22a0      	movs	r2, #160	; 0xa0
 8000354:	05d2      	lsls	r2, r2, #23
 8000356:	6812      	ldr	r2, [r2, #0]
 8000358:	4938      	ldr	r1, [pc, #224]	; (800043c <TIM2_Init+0x240>)
 800035a:	430a      	orrs	r2, r1
 800035c:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~((1 << 16) | (1 << 4));
 800035e:	23a0      	movs	r3, #160	; 0xa0
 8000360:	05db      	lsls	r3, r3, #23
 8000362:	22a0      	movs	r2, #160	; 0xa0
 8000364:	05d2      	lsls	r2, r2, #23
 8000366:	6812      	ldr	r2, [r2, #0]
 8000368:	4935      	ldr	r1, [pc, #212]	; (8000440 <TIM2_Init+0x244>)
 800036a:	400a      	ands	r2, r1
 800036c:	601a      	str	r2, [r3, #0]
	GPIOA->OTYPER &= ~((1 << 2) | (1 << 8));// PA2 PA8 PP
 800036e:	23a0      	movs	r3, #160	; 0xa0
 8000370:	05db      	lsls	r3, r3, #23
 8000372:	22a0      	movs	r2, #160	; 0xa0
 8000374:	05d2      	lsls	r2, r2, #23
 8000376:	6852      	ldr	r2, [r2, #4]
 8000378:	4932      	ldr	r1, [pc, #200]	; (8000444 <TIM2_Init+0x248>)
 800037a:	400a      	ands	r2, r1
 800037c:	605a      	str	r2, [r3, #4]
	GPIOA->OSPEEDR |= (0x03 << 4) | (0x03 << 16);
 800037e:	23a0      	movs	r3, #160	; 0xa0
 8000380:	05db      	lsls	r3, r3, #23
 8000382:	22a0      	movs	r2, #160	; 0xa0
 8000384:	05d2      	lsls	r2, r2, #23
 8000386:	6892      	ldr	r2, [r2, #8]
 8000388:	492f      	ldr	r1, [pc, #188]	; (8000448 <TIM2_Init+0x24c>)
 800038a:	430a      	orrs	r2, r1
 800038c:	609a      	str	r2, [r3, #8]
	 	 	 	 	 	 	 	 	 	 	//PA2 PA8 High Speed
	GPIOA->PUPDR |= (1 << 16) | (1 << 4);
 800038e:	23a0      	movs	r3, #160	; 0xa0
 8000390:	05db      	lsls	r3, r3, #23
 8000392:	22a0      	movs	r2, #160	; 0xa0
 8000394:	05d2      	lsls	r2, r2, #23
 8000396:	68d2      	ldr	r2, [r2, #12]
 8000398:	492c      	ldr	r1, [pc, #176]	; (800044c <TIM2_Init+0x250>)
 800039a:	430a      	orrs	r2, r1
 800039c:	60da      	str	r2, [r3, #12]
//	GPIOA->PUPDR &= ~((1 << 17) | (1 << 5));// PA2 PA8 Pull-Up
	GPIOA->AFR[0] |= 0x00000200;            // PA2 <--> TIM2_CH3
 800039e:	23a0      	movs	r3, #160	; 0xa0
 80003a0:	05db      	lsls	r3, r3, #23
 80003a2:	22a0      	movs	r2, #160	; 0xa0
 80003a4:	05d2      	lsls	r2, r2, #23
 80003a6:	6a12      	ldr	r2, [r2, #32]
 80003a8:	2180      	movs	r1, #128	; 0x80
 80003aa:	0089      	lsls	r1, r1, #2
 80003ac:	430a      	orrs	r2, r1
 80003ae:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[1] |= 0x00000005;            // PA8 <--> TIM2_CH1
 80003b0:	23a0      	movs	r3, #160	; 0xa0
 80003b2:	05db      	lsls	r3, r3, #23
 80003b4:	22a0      	movs	r2, #160	; 0xa0
 80003b6:	05d2      	lsls	r2, r2, #23
 80003b8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80003ba:	2105      	movs	r1, #5
 80003bc:	430a      	orrs	r2, r1
 80003be:	625a      	str	r2, [r3, #36]	; 0x24
	RCC->IOPENR  |= RCC_IOPENR_GPIOBEN;     // ENABLE GPIOB Clock
 80003c0:	4b1a      	ldr	r3, [pc, #104]	; (800042c <TIM2_Init+0x230>)
 80003c2:	4a1a      	ldr	r2, [pc, #104]	; (800042c <TIM2_Init+0x230>)
 80003c4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80003c6:	2102      	movs	r1, #2
 80003c8:	430a      	orrs	r2, r1
 80003ca:	62da      	str	r2, [r3, #44]	; 0x2c
	GPIOB->MODER  |= (1 << 1);
 80003cc:	4b20      	ldr	r3, [pc, #128]	; (8000450 <TIM2_Init+0x254>)
 80003ce:	4a20      	ldr	r2, [pc, #128]	; (8000450 <TIM2_Init+0x254>)
 80003d0:	6812      	ldr	r2, [r2, #0]
 80003d2:	2102      	movs	r1, #2
 80003d4:	430a      	orrs	r2, r1
 80003d6:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  &= ~0x01;                 // GPIOB0 AF
 80003d8:	4b1d      	ldr	r3, [pc, #116]	; (8000450 <TIM2_Init+0x254>)
 80003da:	4a1d      	ldr	r2, [pc, #116]	; (8000450 <TIM2_Init+0x254>)
 80003dc:	6812      	ldr	r2, [r2, #0]
 80003de:	2101      	movs	r1, #1
 80003e0:	438a      	bics	r2, r1
 80003e2:	601a      	str	r2, [r3, #0]
	GPIOB->OTYPER &= ~0x01;                 // GPIOB0 PP
 80003e4:	4b1a      	ldr	r3, [pc, #104]	; (8000450 <TIM2_Init+0x254>)
 80003e6:	4a1a      	ldr	r2, [pc, #104]	; (8000450 <TIM2_Init+0x254>)
 80003e8:	6852      	ldr	r2, [r2, #4]
 80003ea:	2101      	movs	r1, #1
 80003ec:	438a      	bics	r2, r1
 80003ee:	605a      	str	r2, [r3, #4]
	GPIOB->OSPEEDR|= 0x03;                  // GPIOB0 Very High
 80003f0:	4b17      	ldr	r3, [pc, #92]	; (8000450 <TIM2_Init+0x254>)
 80003f2:	4a17      	ldr	r2, [pc, #92]	; (8000450 <TIM2_Init+0x254>)
 80003f4:	6892      	ldr	r2, [r2, #8]
 80003f6:	2103      	movs	r1, #3
 80003f8:	430a      	orrs	r2, r1
 80003fa:	609a      	str	r2, [r3, #8]
	GPIOB->PUPDR  |= 0x01;
 80003fc:	4b14      	ldr	r3, [pc, #80]	; (8000450 <TIM2_Init+0x254>)
 80003fe:	4a14      	ldr	r2, [pc, #80]	; (8000450 <TIM2_Init+0x254>)
 8000400:	68d2      	ldr	r2, [r2, #12]
 8000402:	2101      	movs	r1, #1
 8000404:	430a      	orrs	r2, r1
 8000406:	60da      	str	r2, [r3, #12]
//	GPIOB->PUPDR  &= ~(1 << 1);             // GPIOB0 Pull-Up
	GPIOB->AFR[0] |= 0x2;                   // GPIOB0 TIM2_CH2
 8000408:	4b11      	ldr	r3, [pc, #68]	; (8000450 <TIM2_Init+0x254>)
 800040a:	4a11      	ldr	r2, [pc, #68]	; (8000450 <TIM2_Init+0x254>)
 800040c:	6a12      	ldr	r2, [r2, #32]
 800040e:	2102      	movs	r1, #2
 8000410:	430a      	orrs	r2, r1
 8000412:	621a      	str	r2, [r3, #32]

	TIM2->CR1 |= 0x01;                      // ENABLE TIM2
 8000414:	2380      	movs	r3, #128	; 0x80
 8000416:	05db      	lsls	r3, r3, #23
 8000418:	2280      	movs	r2, #128	; 0x80
 800041a:	05d2      	lsls	r2, r2, #23
 800041c:	6812      	ldr	r2, [r2, #0]
 800041e:	2101      	movs	r1, #1
 8000420:	430a      	orrs	r2, r1
 8000422:	601a      	str	r2, [r3, #0]
}
 8000424:	46c0      	nop			; (mov r8, r8)
 8000426:	46bd      	mov	sp, r7
 8000428:	b002      	add	sp, #8
 800042a:	bd80      	pop	{r7, pc}
 800042c:	40021000 	.word	0x40021000
 8000430:	fffffcff 	.word	0xfffffcff
 8000434:	fffff8ff 	.word	0xfffff8ff
 8000438:	fffffdff 	.word	0xfffffdff
 800043c:	00020020 	.word	0x00020020
 8000440:	fffeffef 	.word	0xfffeffef
 8000444:	fffffefb 	.word	0xfffffefb
 8000448:	00030030 	.word	0x00030030
 800044c:	00010010 	.word	0x00010010
 8000450:	50000400 	.word	0x50000400

08000454 <TIM2_PWM_Start>:

void TIM2_PWM_Start(void)
{
 8000454:	b580      	push	{r7, lr}
 8000456:	af00      	add	r7, sp, #0
	TIM2->CNT = 0x00;
 8000458:	2380      	movs	r3, #128	; 0x80
 800045a:	05db      	lsls	r3, r3, #23
 800045c:	2200      	movs	r2, #0
 800045e:	625a      	str	r2, [r3, #36]	; 0x24
	TIM2->CCER |= (TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E);
 8000460:	2380      	movs	r3, #128	; 0x80
 8000462:	05db      	lsls	r3, r3, #23
 8000464:	2280      	movs	r2, #128	; 0x80
 8000466:	05d2      	lsls	r2, r2, #23
 8000468:	6a12      	ldr	r2, [r2, #32]
 800046a:	2112      	movs	r1, #18
 800046c:	31ff      	adds	r1, #255	; 0xff
 800046e:	430a      	orrs	r2, r1
 8000470:	621a      	str	r2, [r3, #32]
}
 8000472:	46c0      	nop			; (mov r8, r8)
 8000474:	46bd      	mov	sp, r7
 8000476:	bd80      	pop	{r7, pc}

08000478 <main>:

void SysTick_Init(uint32_t LOAD);
void delay(void);

int main(void)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	af00      	add	r7, sp, #0
	SysTick_Init(10000);
 800047c:	4b14      	ldr	r3, [pc, #80]	; (80004d0 <main+0x58>)
 800047e:	0018      	movs	r0, r3
 8000480:	f000 f82e 	bl	80004e0 <SysTick_Init>
	LED_Init();
 8000484:	f7ff fe40 	bl	8000108 <LED_Init>
	COMP1_Init();
 8000488:	f7ff fe80 	bl	800018c <COMP1_Init>
	COMP_A_PHASE;
 800048c:	4b11      	ldr	r3, [pc, #68]	; (80004d4 <main+0x5c>)
 800048e:	4a11      	ldr	r2, [pc, #68]	; (80004d4 <main+0x5c>)
 8000490:	6812      	ldr	r2, [r2, #0]
 8000492:	2120      	movs	r1, #32
 8000494:	438a      	bics	r2, r1
 8000496:	601a      	str	r2, [r3, #0]
 8000498:	4b0e      	ldr	r3, [pc, #56]	; (80004d4 <main+0x5c>)
 800049a:	4a0e      	ldr	r2, [pc, #56]	; (80004d4 <main+0x5c>)
 800049c:	6812      	ldr	r2, [r2, #0]
 800049e:	2110      	movs	r1, #16
 80004a0:	430a      	orrs	r2, r1
 80004a2:	601a      	str	r2, [r3, #0]
	TIM2_Init(16, 999);
 80004a4:	4b0c      	ldr	r3, [pc, #48]	; (80004d8 <main+0x60>)
 80004a6:	0019      	movs	r1, r3
 80004a8:	2010      	movs	r0, #16
 80004aa:	f7ff fea7 	bl	80001fc <TIM2_Init>
	TIM2->CCR1 = 750;
 80004ae:	2380      	movs	r3, #128	; 0x80
 80004b0:	05db      	lsls	r3, r3, #23
 80004b2:	4a0a      	ldr	r2, [pc, #40]	; (80004dc <main+0x64>)
 80004b4:	635a      	str	r2, [r3, #52]	; 0x34
	TIM2->CCR2 = 500;
 80004b6:	2380      	movs	r3, #128	; 0x80
 80004b8:	05db      	lsls	r3, r3, #23
 80004ba:	22fa      	movs	r2, #250	; 0xfa
 80004bc:	0052      	lsls	r2, r2, #1
 80004be:	639a      	str	r2, [r3, #56]	; 0x38
	TIM2->CCR3 = 250;
 80004c0:	2380      	movs	r3, #128	; 0x80
 80004c2:	05db      	lsls	r3, r3, #23
 80004c4:	22fa      	movs	r2, #250	; 0xfa
 80004c6:	63da      	str	r2, [r3, #60]	; 0x3c
	TIM2_PWM_Start();
 80004c8:	f7ff ffc4 	bl	8000454 <TIM2_PWM_Start>
	while(1);
 80004cc:	e7fe      	b.n	80004cc <main+0x54>
 80004ce:	46c0      	nop			; (mov r8, r8)
 80004d0:	00002710 	.word	0x00002710
 80004d4:	40010018 	.word	0x40010018
 80004d8:	000003e7 	.word	0x000003e7
 80004dc:	000002ee 	.word	0x000002ee

080004e0 <SysTick_Init>:
	for(tmp=0; tmp<0xffff; tmp++);
}

// Init Systick Timer
void SysTick_Init(uint32_t LOAD)
{
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b082      	sub	sp, #8
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
	SysTick->VAL  &= 0x00000000;
 80004e8:	4b08      	ldr	r3, [pc, #32]	; (800050c <SysTick_Init+0x2c>)
 80004ea:	689b      	ldr	r3, [r3, #8]
 80004ec:	4b07      	ldr	r3, [pc, #28]	; (800050c <SysTick_Init+0x2c>)
 80004ee:	2200      	movs	r2, #0
 80004f0:	609a      	str	r2, [r3, #8]
	SysTick->LOAD  = LOAD;             //  SysTick Freq
 80004f2:	4b06      	ldr	r3, [pc, #24]	; (800050c <SysTick_Init+0x2c>)
 80004f4:	687a      	ldr	r2, [r7, #4]
 80004f6:	605a      	str	r2, [r3, #4]
    SysTick->CTRL |= 0x00000007;       //  SysTick ENABLE IRQ, CLK = SYS_CLK / 8
 80004f8:	4b04      	ldr	r3, [pc, #16]	; (800050c <SysTick_Init+0x2c>)
 80004fa:	4a04      	ldr	r2, [pc, #16]	; (800050c <SysTick_Init+0x2c>)
 80004fc:	6812      	ldr	r2, [r2, #0]
 80004fe:	2107      	movs	r1, #7
 8000500:	430a      	orrs	r2, r1
 8000502:	601a      	str	r2, [r3, #0]
}
 8000504:	46c0      	nop			; (mov r8, r8)
 8000506:	46bd      	mov	sp, r7
 8000508:	b002      	add	sp, #8
 800050a:	bd80      	pop	{r7, pc}
 800050c:	e000e010 	.word	0xe000e010

08000510 <SysTick_Handler>:

void SysTick_Handler(void)
{
 8000510:	b580      	push	{r7, lr}
 8000512:	af00      	add	r7, sp, #0
	/*
	 * Place Holder For SysTick Handler
	 */
}
 8000514:	46c0      	nop			; (mov r8, r8)
 8000516:	46bd      	mov	sp, r7
 8000518:	bd80      	pop	{r7, pc}
	...

0800051c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 800051c:	4813      	ldr	r0, [pc, #76]	; (800056c <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 800051e:	4685      	mov	sp, r0

/*Check if boot space corresponds to system memory*/

    LDR R0,=0x00000004
 8000520:	2004      	movs	r0, #4
    LDR R1, [R0]
 8000522:	6801      	ldr	r1, [r0, #0]
    LSRS R1, R1, #24
 8000524:	0e09      	lsrs	r1, r1, #24
    LDR R2,=0x1F
 8000526:	221f      	movs	r2, #31
    CMP R1, R2
 8000528:	4291      	cmp	r1, r2
    BNE ApplicationStart
 800052a:	d105      	bne.n	8000538 <ApplicationStart>

 /*SYSCFG clock enable*/
    LDR R0,=0x40021034
 800052c:	4810      	ldr	r0, [pc, #64]	; (8000570 <LoopForever+0x6>)
    LDR R1,=0x00000001
 800052e:	2101      	movs	r1, #1
    STR R1, [R0]
 8000530:	6001      	str	r1, [r0, #0]

/*Set CFGR1 register with flash memory remap at address 0*/
    LDR R0,=0x40010000
 8000532:	4810      	ldr	r0, [pc, #64]	; (8000574 <LoopForever+0xa>)
    LDR R1,=0x00000000
 8000534:	2100      	movs	r1, #0
    STR R1, [R0]
 8000536:	6001      	str	r1, [r0, #0]

08000538 <ApplicationStart>:

ApplicationStart:
/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 8000538:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800053a:	e003      	b.n	8000544 <LoopCopyDataInit>

0800053c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800053c:	4b0e      	ldr	r3, [pc, #56]	; (8000578 <LoopForever+0xe>)
  ldr  r3, [r3, r1]
 800053e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000540:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000542:	3104      	adds	r1, #4

08000544 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x12>)
  ldr  r3, =_edata
 8000546:	4b0e      	ldr	r3, [pc, #56]	; (8000580 <LoopForever+0x16>)
  adds  r2, r0, r1
 8000548:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800054a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800054c:	d3f6      	bcc.n	800053c <CopyDataInit>
  ldr  r2, =_sbss
 800054e:	4a0d      	ldr	r2, [pc, #52]	; (8000584 <LoopForever+0x1a>)
  b  LoopFillZerobss
 8000550:	e002      	b.n	8000558 <LoopFillZerobss>

08000552 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 8000552:	2300      	movs	r3, #0
  str  r3, [r2]
 8000554:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000556:	3204      	adds	r2, #4

08000558 <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 8000558:	4b0b      	ldr	r3, [pc, #44]	; (8000588 <LoopForever+0x1e>)
  cmp  r2, r3
 800055a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800055c:	d3f9      	bcc.n	8000552 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800055e:	f000 f817 	bl	8000590 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000562:	f000 f84f 	bl	8000604 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000566:	f7ff ff87 	bl	8000478 <main>

0800056a <LoopForever>:

LoopForever:
    b LoopForever
 800056a:	e7fe      	b.n	800056a <LoopForever>
   ldr   r0, =_estack
 800056c:	20000800 	.word	0x20000800
    LDR R0,=0x40021034
 8000570:	40021034 	.word	0x40021034
    LDR R0,=0x40010000
 8000574:	40010000 	.word	0x40010000
  ldr  r3, =_sidata
 8000578:	0800066c 	.word	0x0800066c
  ldr  r0, =_sdata
 800057c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000580:	20000000 	.word	0x20000000
  ldr  r2, =_sbss
 8000584:	20000000 	.word	0x20000000
  ldr  r3, = _ebss
 8000588:	2000001c 	.word	0x2000001c

0800058c <DMA1_Channel1_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800058c:	e7fe      	b.n	800058c <DMA1_Channel1_IRQHandler>
	...

08000590 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{    
 8000590:	b580      	push	{r7, lr}
 8000592:	af00      	add	r7, sp, #0
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8000594:	4b15      	ldr	r3, [pc, #84]	; (80005ec <SystemInit+0x5c>)
 8000596:	4a15      	ldr	r2, [pc, #84]	; (80005ec <SystemInit+0x5c>)
 8000598:	6812      	ldr	r2, [r2, #0]
 800059a:	2180      	movs	r1, #128	; 0x80
 800059c:	0049      	lsls	r1, r1, #1
 800059e:	430a      	orrs	r2, r1
 80005a0:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  // RCC->CFGR &= (uint32_t) 0x88FF400C;
  RCC->CFGR = (uint32_t) 0x0280000f;
 80005a2:	4b12      	ldr	r3, [pc, #72]	; (80005ec <SystemInit+0x5c>)
 80005a4:	4a12      	ldr	r2, [pc, #72]	; (80005f0 <SystemInit+0x60>)
 80005a6:	60da      	str	r2, [r3, #12]
  // PLL

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR |= (1 << 24) | (1 << 0);
 80005a8:	4b10      	ldr	r3, [pc, #64]	; (80005ec <SystemInit+0x5c>)
 80005aa:	4a10      	ldr	r2, [pc, #64]	; (80005ec <SystemInit+0x5c>)
 80005ac:	6812      	ldr	r2, [r2, #0]
 80005ae:	4911      	ldr	r1, [pc, #68]	; (80005f4 <SystemInit+0x64>)
 80005b0:	430a      	orrs	r2, r1
 80005b2:	601a      	str	r2, [r3, #0]
  
  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFE;
 80005b4:	4b0d      	ldr	r3, [pc, #52]	; (80005ec <SystemInit+0x5c>)
 80005b6:	4a0d      	ldr	r2, [pc, #52]	; (80005ec <SystemInit+0x5c>)
 80005b8:	6892      	ldr	r2, [r2, #8]
 80005ba:	2101      	movs	r1, #1
 80005bc:	438a      	bics	r2, r1
 80005be:	609a      	str	r2, [r3, #8]
  
  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80005c0:	4b0a      	ldr	r3, [pc, #40]	; (80005ec <SystemInit+0x5c>)
 80005c2:	4a0a      	ldr	r2, [pc, #40]	; (80005ec <SystemInit+0x5c>)
 80005c4:	6812      	ldr	r2, [r2, #0]
 80005c6:	490c      	ldr	r1, [pc, #48]	; (80005f8 <SystemInit+0x68>)
 80005c8:	400a      	ands	r2, r1
 80005ca:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 80005cc:	4b07      	ldr	r3, [pc, #28]	; (80005ec <SystemInit+0x5c>)
 80005ce:	4a07      	ldr	r2, [pc, #28]	; (80005ec <SystemInit+0x5c>)
 80005d0:	68d2      	ldr	r2, [r2, #12]
 80005d2:	490a      	ldr	r1, [pc, #40]	; (80005fc <SystemInit+0x6c>)
 80005d4:	400a      	ands	r2, r1
 80005d6:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000;
 80005d8:	4b04      	ldr	r3, [pc, #16]	; (80005ec <SystemInit+0x5c>)
 80005da:	2200      	movs	r2, #0
 80005dc:	611a      	str	r2, [r3, #16]
  
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80005de:	4b08      	ldr	r3, [pc, #32]	; (8000600 <SystemInit+0x70>)
 80005e0:	2280      	movs	r2, #128	; 0x80
 80005e2:	0512      	lsls	r2, r2, #20
 80005e4:	609a      	str	r2, [r3, #8]
#endif
}
 80005e6:	46c0      	nop			; (mov r8, r8)
 80005e8:	46bd      	mov	sp, r7
 80005ea:	bd80      	pop	{r7, pc}
 80005ec:	40021000 	.word	0x40021000
 80005f0:	0280000f 	.word	0x0280000f
 80005f4:	01000001 	.word	0x01000001
 80005f8:	fffbffff 	.word	0xfffbffff
 80005fc:	ff02ffff 	.word	0xff02ffff
 8000600:	e000ed00 	.word	0xe000ed00

08000604 <__libc_init_array>:
 8000604:	b570      	push	{r4, r5, r6, lr}
 8000606:	2600      	movs	r6, #0
 8000608:	4d0c      	ldr	r5, [pc, #48]	; (800063c <__libc_init_array+0x38>)
 800060a:	4c0d      	ldr	r4, [pc, #52]	; (8000640 <__libc_init_array+0x3c>)
 800060c:	1b64      	subs	r4, r4, r5
 800060e:	10a4      	asrs	r4, r4, #2
 8000610:	42a6      	cmp	r6, r4
 8000612:	d109      	bne.n	8000628 <__libc_init_array+0x24>
 8000614:	2600      	movs	r6, #0
 8000616:	f000 f819 	bl	800064c <_init>
 800061a:	4d0a      	ldr	r5, [pc, #40]	; (8000644 <__libc_init_array+0x40>)
 800061c:	4c0a      	ldr	r4, [pc, #40]	; (8000648 <__libc_init_array+0x44>)
 800061e:	1b64      	subs	r4, r4, r5
 8000620:	10a4      	asrs	r4, r4, #2
 8000622:	42a6      	cmp	r6, r4
 8000624:	d105      	bne.n	8000632 <__libc_init_array+0x2e>
 8000626:	bd70      	pop	{r4, r5, r6, pc}
 8000628:	00b3      	lsls	r3, r6, #2
 800062a:	58eb      	ldr	r3, [r5, r3]
 800062c:	4798      	blx	r3
 800062e:	3601      	adds	r6, #1
 8000630:	e7ee      	b.n	8000610 <__libc_init_array+0xc>
 8000632:	00b3      	lsls	r3, r6, #2
 8000634:	58eb      	ldr	r3, [r5, r3]
 8000636:	4798      	blx	r3
 8000638:	3601      	adds	r6, #1
 800063a:	e7f2      	b.n	8000622 <__libc_init_array+0x1e>
 800063c:	08000664 	.word	0x08000664
 8000640:	08000664 	.word	0x08000664
 8000644:	08000664 	.word	0x08000664
 8000648:	08000668 	.word	0x08000668

0800064c <_init>:
 800064c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800064e:	46c0      	nop			; (mov r8, r8)
 8000650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000652:	bc08      	pop	{r3}
 8000654:	469e      	mov	lr, r3
 8000656:	4770      	bx	lr

08000658 <_fini>:
 8000658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065a:	46c0      	nop			; (mov r8, r8)
 800065c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800065e:	bc08      	pop	{r3}
 8000660:	469e      	mov	lr, r3
 8000662:	4770      	bx	lr
